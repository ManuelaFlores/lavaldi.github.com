{"version":3,"sources":["webpack:///./src/pages/jesus-freak.js","webpack:///./src/components/PostsWithImage.js"],"names":["BlogIndex","posts","data","allMarkdownRemark","edges","simplifiedPosts","useMemo","getSimplifiedPosts","thumbnails","title","config","siteTitle","className","pageQuery","PostsWithImage","LinkType","post","children","slug","key","id","to","href","path","map","staticThumbnail","src","alt","height","width","banner","fixed","thumbnail","description"],"mappings":"6FAAA,0LAWe,SAASA,EAAT,GAA8B,IACrCC,EADoC,EAARC,KACfC,kBAAkBC,MAC/BC,EAAkBC,mBACtB,kBAAMC,YAAmBN,EAAO,CAAEO,YAAY,MAC9C,CAACP,IAGH,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQQ,MAAK,iBAAmBC,IAAOC,YACvC,kBAAC,IAAD,MACA,gCACE,yBAAKC,UAAU,yBACb,2CACA,uBAAGA,UAAU,YAAb,qBAKJ,iCACE,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAgBV,KAAMG,QAQ3B,IAAMQ,EAAS,c,kCCzCtB,4FAIe,SAASC,EAAT,GAAmC,IAATZ,EAAQ,EAARA,KACjCa,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACfD,EAAKE,KACH,kBAAC,OAAD,CAAMC,IAAKH,EAAKI,GAAIC,GAAIL,EAAKE,MAC1BD,GAGH,uBAAGE,IAAKH,EAAKI,GAAIE,KAAMN,EAAKO,MACzBN,IAIP,OACE,yBAAKL,UAAU,cACZV,EAAKsB,KAAI,SAACR,GACT,OACE,kBAACD,EAAD,CAAUI,IAAKH,EAAKI,GAAIJ,KAAMA,GAC3BA,EAAKS,gBACJ,yBACEC,IAAKV,EAAKS,gBACVE,IAAKX,EAAKI,GACVQ,OAAO,KACPC,MAAM,OAELb,EAAKc,OACR,yBACEJ,IAAKV,EAAKc,OACVH,IAAKX,EAAKI,KAGZ,kBAAC,IAAD,CAAKW,MAAOf,EAAKgB,YAEnB,4BAAKhB,EAAKP,OACTO,EAAKiB,aAAe,uBAAGrB,UAAU,eAAeI,EAAKiB","file":"component---src-pages-jesus-freak-js-ffebf312adb411d12257.js","sourcesContent":["import React, { useMemo } from 'react'\nimport { graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../components/Layout'\nimport PostsWithImage from '../components/PostsWithImage'\nimport SEO from '../components/SEO'\n\nimport { getSimplifiedPosts } from '../utils/helpers'\nimport config from '../utils/config'\n\nexport default function BlogIndex({ data }) {\n  const posts = data.allMarkdownRemark.edges\n  const simplifiedPosts = useMemo(\n    () => getSimplifiedPosts(posts, { thumbnails: true }),\n    [posts]\n  )\n\n  return (\n    <Layout>\n      <Helmet title={`Jesus Freak | ${config.siteTitle}`} />\n      <SEO />\n      <header>\n        <div className=\"container text-center\">\n          <h1>Jesus Freak</h1>\n          <p className=\"subtitle\">\n            Acerca de Jes√∫s\n          </p>\n        </div>\n      </header>\n      <section>\n        <div className=\"guides-section\">\n          <div className=\"container\">\n            <PostsWithImage data={simplifiedPosts} />\n          </div>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query JesusFreakQuery {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { categories: { in: \"JesusFreak\" } } }\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            description\n            banner\n            thumbnail {\n              childImageSharp {\n                fixed(width: 50, height: 50) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nexport default function PostsWithImage({ data }) {\n  const LinkType = ({ post, children }) =>\n    post.slug ? (\n      <Link key={post.id} to={post.slug}>\n        {children}\n      </Link>\n    ) : (\n      <a key={post.id} href={post.path}>\n        {children}\n      </a>\n    )\n\n  return (\n    <div className=\"grid guide\">\n      {data.map((post) => {\n        return (\n          <LinkType key={post.id} post={post}>\n            {post.staticThumbnail ? (\n              <img\n                src={post.staticThumbnail}\n                alt={post.id}\n                height=\"50\"\n                width=\"50\"\n              />\n            ) :  post.banner ? (\n              <img\n                src={post.banner}\n                alt={post.id}\n              />\n            ) : (\n              <Img fixed={post.thumbnail} />\n            )}\n            <h2>{post.title}</h2>\n            {post.description && <p className=\"description\">{post.description}</p>}\n          </LinkType>\n        )\n      })}\n    </div>\n  )\n}\n"],"sourceRoot":""}