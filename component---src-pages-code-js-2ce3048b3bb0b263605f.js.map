{"version":3,"sources":["webpack:///./src/pages/code.js","webpack:///./src/utils/helpers.js","webpack:///./src/components/Posts.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["BlogIndex","data","posts","allMarkdownRemark","edges","simplifiedPosts","useMemo","getSimplifiedPosts","title","config","siteTitle","customDescription","className","showYears","withDate","narrow","pageQuery","options","map","post","id","node","date","frontmatter","slug","fields","tags","banner","description","excerpt","thumbnails","thumbnail","childImageSharp","fixed","slugify","string","match","x","toLowerCase","join","Cell","Date","oneMonthAgo","setMonth","getMonth","isNew","key","to","tag","Posts","postsByYear","forEach","year","split","years","Object","keys","reverse","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","length","indexOf"],"mappings":"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","file":"component---src-pages-code-js-2ce3048b3bb0b263605f.js","sourcesContent":["import React, { useMemo } from 'react'\nimport { graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../components/Layout'\nimport Posts from '../components/Posts'\nimport SEO from '../components/SEO'\n\nimport { getSimplifiedPosts } from '../utils/helpers'\nimport config from '../utils/config'\n\nexport default function BlogIndex({ data, ...props }) {\n  const posts = data.allMarkdownRemark.edges\n  const simplifiedPosts = useMemo(() => getSimplifiedPosts(posts), [posts])\n\n  return (\n    <Layout>\n      <Helmet title={`Code | ${config.siteTitle}`} />\n      <SEO customDescription=\"Articles, tutorials, snippets, musings, and everything else.\" />\n      <header>\n        <div className=\"container text-center\">\n          <h1>Code</h1>\n          <p className=\"subtitle\">\n            Artículos, tutoriales y mucho más\n          </p>\n        </div>\n      </header>\n      <section>\n        <div className=\"container\">\n          <Posts data={simplifiedPosts} showYears withDate narrow />\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query CodeQuery {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { categories: { in: \"Code\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","export function getSimplifiedPosts(posts, options = {}) {\n  return posts.map((post) => ({\n    id: post.node.id,\n    date: post.node.frontmatter.date,\n    slug: post.node.fields.slug,\n    tags: post.node.frontmatter.tags,\n    title: post.node.frontmatter.title,\n    banner: post.node.frontmatter.banner,\n    description: post.node.excerpt,\n    ...(options.thumbnails && {\n      thumbnail: post.node.frontmatter.thumbnail.childImageSharp.fixed,\n    }),\n  }))\n}\n\nexport function slugify(string) {\n  return (\n    string &&\n    string\n      .match(\n        /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g\n      )\n      .map((x) => x.toLowerCase())\n      .join('-')\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Link } from 'gatsby'\n\nimport { slugify } from '../utils/helpers'\n\nconst Cell = ({ node, tags, withDate }) => {\n  const date = new Date(node.date)\n  const oneMonthAgo = new Date()\n  oneMonthAgo.setMonth(oneMonthAgo.getMonth() - 1)\n  let isNew = false\n\n  if (date > oneMonthAgo) {\n    isNew = true\n  }\n\n  return (\n    <div className={`row ${!withDate ? 'narrow' : ''}`} key={node.id}>\n      <Link to={node.slug} className=\"cell\">\n        {isNew && <div className=\"new-post\">New!</div>}\n        <div>\n          {withDate && <time>{node.date}</time>}\n          <div>{node.title}</div>\n        </div>\n      </Link>\n      {tags && (\n        <div className=\"cell tags\">\n          {node.tags &&\n            node.tags.map((tag) => (\n              <Link\n                key={tag}\n                to={`/tags/${slugify(tag)}`}\n                className={`tag-${tag}`}\n              >\n                {tag}\n              </Link>\n            ))}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default function Posts({ data, tags, showYears, withDate }) {\n  const postsByYear = {}\n\n  data.forEach((post) => {\n    const year = post.date.split(', ')[1]\n\n    postsByYear[year] = [...(postsByYear[year] || []), post]\n  })\n\n  const years = useMemo(() => Object.keys(postsByYear).reverse(), [postsByYear])\n\n  if (showYears) {\n    return years.map((year) => (\n      <section key={year}>\n        <h2>{year}</h2>\n        <div className={tags ? 'grid posts with-tags' : 'grid posts'}>\n          {postsByYear[year].map((node) => (\n            <Cell key={node.id} node={node} tags={tags} withDate={withDate} />\n          ))}\n        </div>\n      </section>\n    ))\n  } else {\n    return (\n      <div className={tags ? 'grid posts with-tags' : 'grid posts'}>\n        {data.map((node) => (\n          <Cell key={node.id} node={node} tags={tags} withDate={withDate} />\n        ))}\n      </div>\n    )\n  }\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}